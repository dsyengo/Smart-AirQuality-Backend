import fetch from 'node-fetch';

// Instead of using an API URL from the environment, we use the Gemini API key 
// and assume a standard endpoint for analysis. 
const GEMINI_API_KEY = process.env.GEMINI_API_KEY;
// Use a fixed Gemini endpoint for analysis, as the API URL is not required.
const GEMINI_API_ENDPOINT = "https://api.gemini.com/nlp/analyze";

/**
 * Uses the Gemini NLP model to analyze environmental data.
 * It takes as input the consolidated sensor data, the model response, and the AQI.
 * 
 * System instructions:
 * "You are a data analysis model specialized for environmental data.
 * Provide a comprehensive, easy-to-understand analysis that highlights 
 * trends, anomalies, and recommendations based on the raw numerical sensor data.
 * Do not modify sensor values."
 * 
 * @param {Object} inputData - An object containing sensorData, modelResponse, and AQI.
 * @returns {Promise<string>} The analysis text generated by the Gemini NLP model.
 */
export async function analyzeDataWithGemini(inputData) {
    const systemPrompt = `You are a data analysis model specialized for environmental data, for a Smart AiQualoty management system.
Provide a comprehensive, plain language explanation of the following data.
Highlight trends, anomalies, and provide key findings and recommendations.
Do not modify any numerical sensor measurements.`;

    // Convert the input data into a nicely formatted JSON string for clarity.
    const userPrompt = JSON.stringify(inputData, null, 2);

    const requestBody = {
        system: systemPrompt,
        user: userPrompt
    };

    const response = await fetch(GEMINI_API_ENDPOINT, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${GEMINI_API_KEY}`
        },
        body: JSON.stringify(requestBody)
    });

    if (!response.ok) {
        throw new Error(`Gemini NLP API error: ${response.status}`);
    }

    const result = await response.json();
    // Assuming the API returns an object with an "analysis" property.
    return result.analysis;
}