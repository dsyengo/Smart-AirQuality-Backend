import fetch from "node-fetch";
import dotenv from "dotenv";

dotenv.config();

const GEMINI_API_KEY = process.env.GEMINI_API_KEY;
const GEMINI_API_ENDPOINT = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${GEMINI_API_KEY}`;

/**
 * Uses the Gemini NLP model to analyze environmental data.
 *
 * @param {Object} inputData - An object containing sensorData, modelResponse, and AQI.
 * @returns {Promise<string>} The analysis text generated by the Gemini NLP model.
 */
export async function analyzeDataWithGemini(inputData) {
    const systemPrompt = `You are an advanced AI data analyst specialized in environmental and air quality monitoring for the Smart AiQuality Management System.
Analyze the provided sensor data, including pollutant levels, AQI, and health risk indicators.

- Identify trends over time (e.g., rising or falling pollution levels).
- Detect anomalies (e.g., sudden spikes in pollutants or unusual patterns).
- Provide insights into possible causes of observed trends based on data.
- Offer health and safety recommendations based on AQI levels and health risks.
- Do not alter or modify any numerical sensor measurements.
- Format your response in clear, structured paragraphs, making it easy to understand for non-technical users.
- Keep the explanation precise, actionable, and based on the latest available data.`;

    const userPrompt = JSON.stringify(inputData, null, 2);

    const requestBody = {
        contents: [
            { role: "system", parts: [{ text: systemPrompt }] },
            { role: "user", parts: [{ text: userPrompt }] }
        ]
    };

    try {
        const response = await fetch(GEMINI_API_ENDPOINT, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${GEMINI_API_KEY}`
            },
            body: JSON.stringify(requestBody)
        });

        if (!response.ok) {
            throw new Error(`Gemini API error: ${response.status} - ${response.statusText}`);
        }

        const result = await response.json();

        return result?.candidates?.[0]?.content?.parts?.[0]?.text || "No response received from AI model.";
    } catch (error) {
        console.error("Error analyzing data with Gemini:", error);
        throw new Error("An error occurred while processing the data.");
    }
}


//test
const testData = {
    sensorData: [
        { timestamp: "2025-02-25T08:00:00Z", PM2_5: 35, PM10: 50, CO: 0.6, NO2: 20, O3: 30 },
        { timestamp: "2025-02-25T09:00:00Z", PM2_5: 40, PM10: 55, CO: 0.7, NO2: 22, O3: 28 },
        { timestamp: "2025-02-25T10:00:00Z", PM2_5: 100, PM10: 120, CO: 1.2, NO2: 60, O3: 70 }, // Anomaly (Sudden spike)
        { timestamp: "2025-02-25T11:00:00Z", PM2_5: 38, PM10: 53, CO: 0.65, NO2: 21, O3: 29 }
    ],
    modelResponse: "The air quality appears to be stable except for a sudden spike in PM2.5 and NO2 at 10:00 AM, which may indicate local pollution sources such as traffic or industrial activity.",
    AQI: {
        value: 85,
        category: "Moderate",
        healthImplications: "Air quality is acceptable; however, people with respiratory issues should limit prolonged outdoor activities."
    }
};

analyzeDataWithGemini(testData)
    .then((response) => console.log("Gemini Analysis:", response))
    .catch((error) => console.error("Error:", error));
